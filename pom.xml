<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.heroku.sample</groupId>
  <artifactId>jdbc4uemf</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>jdbc4uemf Webapp</name>
  <url>http://maven.apache.org</url>
  <properties>
    <!-- <tomcat.version>8.5.38</tomcat.version> -->
    <tomcat.version>8.5.51</tomcat.version> <!-- Known high severity security vulnerability detected in org.apache.tomcat.embed:tomcat-embed-core >= 8.0.0, < 8.5.40 defined in pom.xml. -->
  </properties>
  <dependencies>
    <dependency>
        <groupId>org.apache.tomcat.embed</groupId>
        <artifactId>tomcat-embed-core</artifactId>
        <version>${tomcat.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.tomcat.embed</groupId>
        <artifactId>tomcat-embed-jasper</artifactId>
        <version>${tomcat.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>tomcat-jasper</artifactId>
        <version>${tomcat.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>tomcat-jasper-el</artifactId>
        <version>${tomcat.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>tomcat-jsp-api</artifactId>
        <version>${tomcat.version}</version>
    </dependency>
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.12</version>
		<scope>test</scope>
	</dependency>    
    
      <!-- soource : https://stackoverflow.com/questions/40822839/heroku-and-java-no-suitable-driver -->
    <!--          
<dependency>
  <groupId>org.postgresql</groupId>
  <artifactId>postgresql</artifactId>
  <version>9.4-1201-jdbc4</version>
  <version>9.0-801.jdbc4</version> : does not support auto-generated keys to id inserted
</dependency>
    --> 
    
    <!-- source : https://github.com/heroku/devcenter-java-database/blob/master/devcenter-java-database-plain-jdbc/pom.xml -->
    <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.3.3</version>
    </dependency>    
    
    
  </dependencies>
  <build>
    <finalName>embeddedTomcatSample</finalName>
    <plugins>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>appassembler-maven-plugin</artifactId>
            <version>2.0.0</version>
            <configuration>
                <assembleDirectory>target</assembleDirectory>
                <programs>
                    <program>
                        <mainClass>launch.Main</mainClass>
                        <name>webapp</name>
                    </program>
                </programs>
            </configuration>
            <executions>
                <execution>
                    <phase>package</phase>
                    <goals>
                        <goal>assemble</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
      
	  <!-- source : https://flywaydb.org/getstarted/firststeps/maven --> 
	              <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
			      <!--  <version>6.0.0-beta</version>  --> <!-- pour prise en charge mvn clean sur postgres 11 -->
                <version>5.2.4</version> <!-- -->
                <configuration>
                    <url>
					<!-- jdbc:h2:file:./target/foobar -->
					<!-- https://devcenter.heroku.com/articles/running-database-migrations-for-java-apps -->
					${env.JDBC_DATABASE_URL}
					</url>
                    <!-- <user>sa</user> -->
			
		    <!-- source : https://flywaydb.org/documentation/maven/migrate.html -->	
	    <schemas>
        <schema>public</schema>
    </schemas>
	    <cleanDisabled>false</cleanDisabled> <!-- default : false / should be true in PROD environment -->
		    <baselineOnMigrate>true</baselineOnMigrate>
			
			<!-- https://www.achinepratiquejava.com/2018/04/spring-boot-flyway-java-tracabilite-et.html -->
			<!-- initSql est executé par toutes les commandes : baseline, migrate, ... ! -->
			<!-- <initSql>DROP TABLE IF EXISTS TABINIT ; CREATE TABLE TABINIT ( ID int not null )</initSql> -->
			<!-- <initSql>DROP TABLE IF EXISTS flyway_schema_history</initSql> -->
			
			<!-- pour la beauté du geste, on mets 0.9 pour que le premier script traité soit en 1.0 -->
			<baselineVersion>0.9</baselineVersion>
			
			<!-- https://flywaydb.org/documentation/existing -->

                </configuration>
			      
                <dependencies>
<!--
                    <dependency>
                        <groupId>com.h2database</groupId>
                        <artifactId>h2</artifactId>
                        <version>1.4.197</version>
                    </dependency>
-->

                </dependencies>
            </plugin>
	  
      <!-- soource : https://stackoverflow.com/questions/40822839/heroku-and-java-no-suitable-driver -->
      <!--            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>2.4</version>
            <executions>
                <execution>
                    <id>copy-dependencies</id>
                    <phase>package</phase>
                    <goals><goal>copy-dependencies</goal></goals>
                </execution>
            </executions>
      -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.0.0</version>
            <configuration>
                <source>1.8</source>
                <target>1.8</target>
            </configuration>
        </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.22.1</version>
        </plugin>

	  	  <!-- source : https://stackoverflow.com/questions/51091539/maven-site-plugins-3-3-java-lang-classnotfoundexception-org-apache-maven-doxia -->
		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
		  <artifactId>maven-site-plugin</artifactId>
		  <version>3.7.1</version>
		</plugin>	
		
	  <!-- source : https://maven.apache.org/surefire/maven-surefire-report-plugin/usage.html -->
		<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>3.0.0-M3</version>
      </plugin>		
    </plugins>
  </build>
</project>
